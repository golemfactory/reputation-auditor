# Generated by Django 4.1.7 on 2024-01-04 14:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('node_id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('cores', models.FloatField()),
                ('memory', models.FloatField()),
                ('cpu', models.CharField(max_length=255)),
                ('runtime', models.CharField(max_length=255)),
                ('runtime_version', models.CharField(max_length=50)),
                ('threads', models.IntegerField()),
                ('storage', models.FloatField()),
                ('wallet', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TaskCompletion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=255)),
                ('is_successful', models.BooleanField(default=False)),
                ('error_message', models.CharField(max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.provider')),
            ],
        ),
        migrations.CreateModel(
            name='PingResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_p2p', models.BooleanField(default=False)),
                ('ping_tcp', models.CharField(max_length=100)),
                ('ping_udp', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=255)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.provider')),
            ],
        ),
        migrations.CreateModel(
            name='NodeStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_online', models.BooleanField(default=False)),
                ('last_seen', models.DateTimeField()),
                ('total_online_scans', models.IntegerField(default=0)),
                ('uptime_percentage', models.FloatField()),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.provider')),
            ],
        ),
        migrations.CreateModel(
            name='MemoryBenchmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('benchmark_name', models.CharField(max_length=255)),
                ('total_operations', models.IntegerField()),
                ('operations_per_second', models.FloatField()),
                ('total_data_transferred_mi_b', models.FloatField()),
                ('throughput_mi_b_sec', models.FloatField()),
                ('total_time_sec', models.FloatField()),
                ('total_events', models.IntegerField()),
                ('min_latency_ms', models.FloatField()),
                ('avg_latency_ms', models.FloatField()),
                ('max_latency_ms', models.FloatField()),
                ('latency_95th_percentile_ms', models.FloatField()),
                ('sum_latency_ms', models.FloatField()),
                ('events', models.FloatField()),
                ('execution_time_sec', models.FloatField()),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.provider')),
            ],
        ),
        migrations.CreateModel(
            name='DiskBenchmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('benchmark_name', models.CharField(max_length=255)),
                ('reads_per_second', models.FloatField()),
                ('writes_per_second', models.FloatField()),
                ('fsyncs_per_second', models.FloatField()),
                ('read_throughput_mb_ps', models.FloatField()),
                ('write_throughput_mb_ps', models.FloatField()),
                ('total_time_sec', models.FloatField()),
                ('total_io_events', models.IntegerField()),
                ('min_latency_ms', models.FloatField()),
                ('avg_latency_ms', models.FloatField()),
                ('max_latency_ms', models.FloatField()),
                ('latency_95th_percentile_ms', models.FloatField()),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.provider')),
            ],
        ),
        migrations.CreateModel(
            name='CpuBenchmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('benchmark_name', models.CharField(max_length=255)),
                ('threads', models.IntegerField()),
                ('total_time_sec', models.CharField(max_length=100)),
                ('total_events', models.IntegerField()),
                ('events_per_second', models.FloatField()),
                ('min_latency_ms', models.FloatField()),
                ('avg_latency_ms', models.FloatField()),
                ('max_latency_ms', models.FloatField()),
                ('latency_95th_percentile_ms', models.FloatField()),
                ('sum_latency_ms', models.FloatField()),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.provider')),
            ],
        ),
    ]
